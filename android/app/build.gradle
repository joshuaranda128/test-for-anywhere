def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.sample.demo"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    signingConfigs {
        debug {
            storeFile file('../demoApp.jks')
            keyAlias 'DemoApp'
            storePassword 'Demo123'
            keyPassword 'Demo123'
        }
        release {
            storeFile file('../demoApp.jks')
            keyAlias 'DemoApp'
            storePassword 'Demo123'
            keyPassword 'Demo123'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
            java.srcDirs = ['src/main/kotlin']
        }
        simpsons {
            res.srcDirs = ['src/main/res']
            java.srcDirs = ['src/main/java']
        }
        wire {
            res.srcDirs = ['src/main/res']
            java.srcDirs = ['src/main/java']
        }
    }

    defaultConfig {
        applicationId "com.sample.demo"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources false
            minifyEnabled false
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    flavorDimensions "flavor-type"

    productFlavors {
        simpsons {
            dimension "flavor-type"
            applicationId "com.sample.simpsonsviewer"
            manifestPlaceholders = [appLabel: " Simpsons Character Viewer"]
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }
        wire {
            dimension "flavor-type"
            applicationId "com.sample.wireviewer"
            manifestPlaceholders = [appLabel: "Wire Character Viewer"]
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
